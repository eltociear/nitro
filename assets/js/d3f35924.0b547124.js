"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1982],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>f});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),c=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),p=c(n),d=r,f=p["".concat(s,".").concat(d)]||p[d]||m[d]||l;return n?a.createElement(f,o(o({ref:t},u),{},{components:n})):a.createElement(f,o({ref:t},u))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,o=new Array(l);o[0]=d;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[p]="string"==typeof e?e:r,o[1]=i;for(var c=2;c<l;c++)o[c]=n[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},3071:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>m,frontMatter:()=>l,metadata:()=>i,toc:()=>c});var a=n(7462),r=(n(7294),n(3905));const l={title:"Quickstart"},o=void 0,i={unversionedId:"new/quickstart",id:"new/quickstart",title:"Quickstart",description:"Step 1: Install Nitro",source:"@site/docs/new/quickstart.md",sourceDirName:"new",slug:"/new/quickstart",permalink:"/new/quickstart",draft:!1,editUrl:"https://github.com/janhq/nitro/tree/main/docs/docs/new/quickstart.md",tags:[],version:"current",lastUpdatedBy:"automaticcat",lastUpdatedAt:1700452306,formattedLastUpdatedAt:"Nov 20, 2023",frontMatter:{title:"Quickstart"},sidebar:"docsSidebar",previous:{title:"About Nitro",permalink:"/docs"},next:{title:"Installation",permalink:"/install"}},s={},c=[{value:"Step 1: Install Nitro",id:"step-1-install-nitro",level:2},{value:"For Linux and MacOS",id:"for-linux-and-macos",level:3},{value:"For Windows",id:"for-windows",level:3},{value:"Step 2: Downloading a Model",id:"step-2-downloading-a-model",level:2},{value:"Step 3: Run Nitro server",id:"step-3-run-nitro-server",level:2},{value:"Step 4: Making an Inference",id:"step-4-making-an-inference",level:2}],u={toc:c},p="wrapper";function m(e){let{components:t,...n}=e;return(0,r.kt)(p,(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"step-1-install-nitro"},"Step 1: Install Nitro"),(0,r.kt)("h3",{id:"for-linux-and-macos"},"For Linux and MacOS"),(0,r.kt)("p",null,"Open your terminal and enter the following command. This will download and install Nitro on your system."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"curl -sfL https://raw.githubusercontent.com/janhq/nitro/main/install.sh -o /tmp/install.sh && chmod +x /tmp/install.sh && sudo bash /tmp/install.sh --gpu && rm /tmp/install.sh\n")),(0,r.kt)("h3",{id:"for-windows"},"For Windows"),(0,r.kt)("p",null,"Open PowerShell and execute the following command. This will perform the same actions as for Linux and MacOS but is tailored for Windows."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"powershell -Command \"& { Invoke-WebRequest -Uri 'https://raw.githubusercontent.com/janhq/nitro/main/install.bat' -OutFile 'install.bat'; .\\install.bat --gpu; Remove-Item -Path 'install.bat' }\"\n")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("strong",{parentName:"p"},"NOTE:"),"Installing Nitro will add new files and configurations to your system to enable it to run.")),(0,r.kt)("p",null,"For a manual installation process, see: ",(0,r.kt)("a",{parentName:"p",href:"/install"},"Install from Source")),(0,r.kt)("h2",{id:"step-2-downloading-a-model"},"Step 2: Downloading a Model"),(0,r.kt)("p",null,"Next, we need to download a model. For this example, we'll use the ",(0,r.kt)("a",{parentName:"p",href:"https://huggingface.co/TheBloke/Llama-2-7B-Chat-GGUF/tree/main"},"Llama2 7B chat model"),"."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Create a ",(0,r.kt)("inlineCode",{parentName:"li"},"/model")," and navigate into it:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"mkdir model && cd model\nwget https://huggingface.co/TheBloke/Llama-2-7B-Chat-GGUF/resolve/main/llama-2-7b-chat.Q5_K_M.gguf?download=true\n")),(0,r.kt)("h2",{id:"step-3-run-nitro-server"},"Step 3: Run Nitro server"),(0,r.kt)("p",null,"To start using Nitro, you need to run its server."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="Run Nitro server"',title:'"Run',Nitro:!0,'server"':!0},"nitro\n")),(0,r.kt)("p",null,"To check if the Nitro server is running:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="Nitro Health Status"',title:'"Nitro',Health:!0,'Status"':!0},"curl http://localhost:3928/healthz\n")),(0,r.kt)("h2",{id:"step-4-making-an-inference"},"Step 4: Making an Inference"),(0,r.kt)("p",null,"Finally, let's make an actual inference call using Nitro."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"In your terminal, execute:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="Nitro Inference"',title:'"Nitro','Inference"':!0},'curl http://localhost:3928/inferences/llamacpp/chat_completion \\\n  -H "Content-Type: application/json" \\\n  -d \'{\n    "messages": [\n      {\n        "role": "user",\n        "content": "Who won the world series in 2020?"\n      },\n    ]\n  }\'\n')),(0,r.kt)("p",null,"This command sends a request to Nitro, asking it about the 2020 World Series winner."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"As you can see, A key benefit of Nitro is its alignment with ",(0,r.kt)("a",{parentName:"li",href:"https://platform.openai.com/docs/guides/text-generation?lang=curl"},"OpenAI's API structure"),". Its inference call syntax closely mirrors that of OpenAI's API, facilitating an easier shift for those accustomed to OpenAI's framework.")))}m.isMDXComponent=!0}}]);