"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[411],{3905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>f});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var d=r.createContext({}),s=function(e){var t=r.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},m=function(e){var t=s(e.components);return r.createElement(d.Provider,{value:t},e.children)},p="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,d=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),p=s(n),u=a,f=p["".concat(d,".").concat(u)]||p[u]||c[u]||i;return n?r.createElement(f,o(o({ref:t},m),{},{components:n})):r.createElement(f,o({ref:t},m))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=u;var l={};for(var d in t)hasOwnProperty.call(t,d)&&(l[d]=t[d]);l.originalType=e,l[p]="string"==typeof e?e:a,o[1]=l;for(var s=2;s<i;s++)o[s]=n[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},64346:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>o,default:()=>c,frontMatter:()=>i,metadata:()=>l,toc:()=>s});var r=n(87462),a=(n(67294),n(3905));const i={title:"Embedding"},o=void 0,l={unversionedId:"features/embed",id:"features/embed",title:"Embedding",description:"What are embeddings?",source:"@site/docs/features/embed.md",sourceDirName:"features",slug:"/features/embed",permalink:"/features/embed",draft:!1,editUrl:"https://github.com/janhq/nitro/tree/main/docs/docs/features/embed.md",tags:[],version:"current",lastUpdatedBy:"automaticcat",lastUpdatedAt:1700820664,formattedLastUpdatedAt:"Nov 24, 2023",frontMatter:{title:"Embedding"},sidebar:"docsSidebar",previous:{title:"Chat Completion",permalink:"/features/chat"},next:{title:"Nitro Features",permalink:"/features/feat"}},d={},s=[{value:"What are embeddings?",id:"what-are-embeddings",level:2},{value:"Activating Embedding Feature",id:"activating-embedding-feature",level:2},{value:"Embedding Request",id:"embedding-request",level:3},{value:"Embedding Reponse",id:"embedding-reponse",level:2}],m={toc:s},p="wrapper";function c(e){let{components:t,...n}=e;return(0,a.kt)(p,(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"what-are-embeddings"},"What are embeddings?"),(0,a.kt)("p",null,"Embeddings are lists of numbers (floats). To find how similar two embeddings are, we measure the ",(0,a.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Cosine_similarity"},"distance")," between them. Shorter distances mean they're more similar; longer distances mean less similarity."),(0,a.kt)("h2",{id:"activating-embedding-feature"},"Activating Embedding Feature"),(0,a.kt)("p",null,"To utilize the embedding feature, include the JSON parameter ",(0,a.kt)("inlineCode",{parentName:"p"},'"embedding": true')," in your ",(0,a.kt)("a",{parentName:"p",href:"/features/load-unload"},"load model request"),". This action enables Nitro to process inferences with embedding capabilities."),(0,a.kt)("h3",{id:"embedding-request"},"Embedding Request"),(0,a.kt)("p",null,"Here\u2019s an example showing how to get the embedding result from the model:"),(0,a.kt)("div",{style:{width:"50%",float:"left",clear:"left"}},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="Nitro" {1}',title:'"Nitro"',"{1}":!0},'curl http://localhost:3928/v1/embeddings \\\n    -H \'Content-Type: application/json\' \\\n    -d \'{\n        "input": "Hello",\n        "model":"Llama-2-7B-Chat-GGUF",\n        "encoding_format": "float"\n    }\'\n\n'))),(0,a.kt)("div",{style:{width:"50%",float:"right",clear:"right"}},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="OpenAI request" {1}',title:'"OpenAI','request"':!0,"{1}":!0},'curl https://api.openai.com/v1/embeddings \\\n  -H "Authorization: Bearer $OPENAI_API_KEY" \\\n  -H "Content-Type: application/json" \\\n  -d \'{\n    "input": "Hello",\n    "model": "text-embedding-ada-002",\n    "encoding_format": "float"\n  }\'\n'))),(0,a.kt)("h2",{id:"embedding-reponse"},"Embedding Reponse"),(0,a.kt)("p",null,"The example response used the output from model ",(0,a.kt)("a",{parentName:"p",href:"https://huggingface.co/TheBloke/Llama-2-7B-Chat-GGUF/tree/main"},"llama2 Chat 7B Q5 (GGUF)")," loaded to Nitro server."),(0,a.kt)("div",{style:{width:"50%",float:"left",clear:"left"}},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="Nitro"',title:'"Nitro"'},'{\n  "data": [\n    {\n      "embedding": [\n        -0.9874749,\n        0.2965493,\n        ...\n        -0.253227\n      ],\n      "index": 0,\n      "object": "embedding"\n    }\n  ]\n}\n'))),(0,a.kt)("div",{style:{width:"50%",float:"right",clear:"right"}},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="OpenAI"',title:'"OpenAI"'},'{\n  "embedding": [\n    0.0023064255,\n    -0.009327292,\n    .... (1536 floats total for ada-002)\n    -0.0028842222,\n  ],\n  "index": 0,\n  "object": "embedding"\n}\n\n\n\n\n'))),(0,a.kt)("p",null,"The embedding feature in Nitro demonstrates a high level of compatibility with OpenAI, simplifying the transition between using OpenAI and local AI models. For more detailed information and advanced use cases, refer to the comprehensive ",(0,a.kt)("a",{parentName:"p",href:"https://nitro.jan.ai/api-reference"},"API Reference"),"."))}c.isMDXComponent=!0}}]);